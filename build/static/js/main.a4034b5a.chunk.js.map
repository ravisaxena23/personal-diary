{"version":3,"sources":["firebase-config.js","components/AddText.js","components/ShowText.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","AddText","useState","input","setInput","style","fontFamily","textAlign","marginTop","noValidate","TextField","variant","margin","required","fullWidth","id","label","name","autoFocus","value","onChange","event","target","Button","type","color","onClick","preventDefault","collection","add","text","month","Date","getMonth","year","getUTCFullYear","day","getUTCDate","datetime","FieldValue","serverTimestamp","disabled","startIcon","AddCircleOutlineRounded","ShowText","setText","open","setOpen","update","setUpdate","toUpdateId","setToUpdateId","time","order","setOrder","useEffect","console","log","onSnapshot","snapshot","docs","map","doc","data","datatime","handleClose","handleChang","filterByTime","val","orderBy","filterByArrivial","Grid","container","spacing","item","xs","md","FormControl","width","InputLabel","Select","labelId","MenuItem","padding","Card","className","Fab","aria-label","size","float","backgroundColor","delete","then","res","DeleteOutlineRounded","openUpdateDialog","Edit","Dialog","onClose","DialogContent","DialogActions","App","AppBar","position","Toolbar","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a4034b5a.chunk.js","sourcesContent":["// src/firebase-config.js\r\n\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAS4a_gTq49PpRPI-ZgY1ztlQsXYUnGdqU\",\r\n    authDomain: \"personal-diary-31fd9.firebaseapp.com\",\r\n    databaseURL: \"https://personal-diary-31fd9-default-rtdb.firebaseio.com\",\r\n    projectId: \"personal-diary-31fd9\",\r\n    storageBucket: \"personal-diary-31fd9.appspot.com\",\r\n    messagingSenderId: \"714221489818\",\r\n    appId: \"1:714221489818:web:033637ba39059486cc5923\",\r\n    measurementId: \"G-V0CKN69X90\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db;","import React, { useState, useEffect } from \"react\";\r\nimport db from \"../firebase-config\";\r\nimport firebase from \"firebase\";\r\n\r\nimport {\r\n  AddCircleOutlineRounded,\r\n  DeleteOutlineRounded,\r\n  Edit,\r\n} from \"@material-ui/icons\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst AddText = () => {\r\n  const [texts, setTexts] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const addText = (event) => {\r\n    event.preventDefault();\r\n    db.collection(\"todos\").add({\r\n      text: input,\r\n      month: new Date().getMonth(),\r\n      year: new Date().getUTCFullYear(),\r\n      day: new Date().getUTCDate(),\r\n      datetime: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 style={{fontFamily:\"cursive\",textAlign:\"center\",marginTop:\"80px\"}}>Add reminder</h2>\r\n      <form noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"text\"\r\n          label=\"Enter text\"\r\n          name=\"text\"\r\n          autoFocus\r\n          value={input}\r\n          onChange={(event) => setInput(event.target.value)}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={addText}\r\n          disabled={!input}\r\n          startIcon={<AddCircleOutlineRounded />}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddText;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport db from \"../firebase-config\";\r\nimport firebase from \"firebase\";\r\n\r\nimport {\r\n  AddCircleOutlineRounded,\r\n  DeleteOutlineRounded,\r\n  Edit,\r\n} from \"@material-ui/icons\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  Fab,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Grid,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Card,\r\n} from \"@material-ui/core\";\r\n\r\nfunction ShowText() {\r\n  const [text, setText] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [update, setUpdate] = useState(\"\");\r\n  const [toUpdateId, setToUpdateId] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [order, setOrder] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect Hook!!!\");\r\n    console.log(time);\r\n    db.collection(\"todos\")\r\n      //   .orderBy(\"datetime\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        console.log(\"Firebase Snap!\");\r\n        setText(\r\n          snapshot.docs.map((doc) => {\r\n            return {\r\n              id: doc.id,\r\n              text: doc.data().text,\r\n              datetime: doc.data().datatime,\r\n              month: doc.data().month,\r\n              year: doc.data().year,\r\n              day: doc.data().day,\r\n            };\r\n          })\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const deleteText = (id) => {\r\n    db.collection(\"todos\")\r\n      .doc(id)\r\n      .delete()\r\n      .then((res) => {\r\n        console.log(\"Deleted!\", res);\r\n      });\r\n  };\r\n\r\n  const openUpdateDialog = (text) => {\r\n    setOpen(true);\r\n    setToUpdateId(text.id);\r\n    setUpdate(text.name);\r\n  };\r\n\r\n  const editText = () => {\r\n    db.collection(\"todos\").doc(toUpdateId).update({\r\n      text: update,\r\n    });\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setTime(event.target.value);\r\n  };\r\n  const handleChang = (event) => {\r\n    setOrder(event.target.value);\r\n  };\r\n\r\n  const filterByTime = (value, val) => {\r\n    if (value === 1) {\r\n      db.collection(\"todos\")\r\n        .orderBy(\"datetime\")\r\n        .onSnapshot((snapshot) => {\r\n          setText(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                text: doc.data().text,\r\n                datetime: doc.data().datatime,\r\n                month: doc.data().month,\r\n                year: doc.data().year,\r\n                day: doc.data().day,\r\n              };\r\n            })\r\n          );\r\n        });\r\n    } else if (value === 2) {\r\n      db.collection(\"todos\")\r\n        .orderBy(\"month\")\r\n        .onSnapshot((snapshot) => {\r\n          setText(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                text: doc.data().text,\r\n                datetime: doc.data().datatime,\r\n                month: doc.data().month,\r\n                year: doc.data().year,\r\n                day: doc.data().day,\r\n              };\r\n            })\r\n          );\r\n        });\r\n    } else if (value === 3) {\r\n      db.collection(\"todos\")\r\n        .orderBy(\"year\")\r\n        .onSnapshot((snapshot) => {\r\n          setText(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                text: doc.data().text,\r\n                datetime: doc.data().datatime,\r\n                month: doc.data().month,\r\n                year: doc.data().year,\r\n                day: doc.data().day,\r\n              };\r\n            })\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const filterByArrivial = (value, val) => {\r\n    if (value === 1) {\r\n      db.collection(\"todos\")\r\n        .orderBy(\"datetime\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setText(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                text: doc.data().text,\r\n                datetime: doc.data().datatime,\r\n                month: doc.data().month,\r\n                year: doc.data().year,\r\n                day: doc.data().day,\r\n              };\r\n            })\r\n          );\r\n        });\r\n    } else if (value === 2) {\r\n      db.collection(\"todos\")\r\n        .orderBy(\"datetime\")\r\n        .onSnapshot((snapshot) => {\r\n          console.log(\"Firebase Snap!\");\r\n          setText(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                text: doc.data().text,\r\n                datetime: doc.data().datatime,\r\n                month: doc.data().month,\r\n                year: doc.data().year,\r\n                day: doc.data().day,\r\n              };\r\n            })\r\n          );\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {/* Filter */}\r\n      <h2 style={{fontFamily:\"cursive\",textAlign:\"center\"}}>Choose Filter</h2>\r\n      <Grid container spacing={3}>\r\n      <Grid item xs={12} md={6}>\r\n      <FormControl style={{ width: \"100%\" }} >\r\n        <InputLabel id=\"order-label\">Choose filter</InputLabel>\r\n        <Select\r\n        labelId=\"order-label\"\r\n        id=\"select1\"\r\n        value={order}\r\n        onChange={handleChang}\r\n        >\r\n          <MenuItem value={1} onClick={() => filterByTime(1)}>\r\n            Week\r\n          </MenuItem>\r\n          <MenuItem value={2} onClick={() => filterByTime(2)}>\r\n            Month\r\n          </MenuItem>\r\n          <MenuItem value={3} onClick={() => filterByTime(3)}>\r\n            Year\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n      <FormControl style={{ width: \"100%\" }}>\r\n        <InputLabel id=\"order-label\">Choose filter</InputLabel>\r\n        <Select\r\n          labelId=\"order-label\"\r\n          id=\"select1\"\r\n          value={order}\r\n          onChange={handleChang}\r\n        >\r\n          <MenuItem value={1} onClick={() => filterByArrivial(1)}>\r\n            Newest first\r\n          </MenuItem>\r\n          <MenuItem value={2} onClick={() => filterByArrivial(2)}>\r\n            Oldest First\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      </Grid>\r\n      {/* Show text */}\r\n      <h2 style={{fontFamily:\"cursive\",textAlign:\"center\"}}>Your reminder</h2>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ padding: \"10px\", marginTop: \"20px\" }}\r\n      >\r\n        {text.map((text) => (\r\n          <Grid item md={6} xs={12}>\r\n            <Card>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6} md={6} className=\"course-preview\">\r\n                  <div style={{ padding: \"10px\" }}>\r\n                    <h6>Date</h6>\r\n                    <h4>\r\n                      {text.day} - {text.month + 1} - {text.year}\r\n                    </h4>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <div>\r\n                    <h6>Reminder</h6>\r\n                    <h2>{text.text}</h2>\r\n                  </div>\r\n                  <Fab\r\n                    aria-label=\"add\"\r\n                    size=\"small\"\r\n                    style={{\r\n                      float: \"right\",\r\n                      padding: \"10px\",\r\n                      margin: \"10px\",\r\n                      backgroundColor: \"#990000\",\r\n                      color: \"#fafafa\",\r\n                    }}\r\n                    onClick={() => deleteText(text.id)}\r\n                  >\r\n                    <DeleteOutlineRounded />\r\n                  </Fab>\r\n                  <Fab\r\n                    aria-label=\"add\"\r\n                    size=\"small\"\r\n                    style={{\r\n                      float: \"right\",\r\n                      padding: \"10px\",\r\n                      margin: \"10px\",\r\n                      backgroundColor: \"#2A265F\",\r\n                      color: \"#fafafa\",\r\n                    }}\r\n                    onClick={() => openUpdateDialog(text)}\r\n                  >\r\n                    <Edit />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* update text */}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"normal\"\r\n            label=\"Update Reminder\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"updateTodo\"\r\n            value={update}\r\n            onChange={(event) => setUpdate(event.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={editText} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowText;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport db from \"./firebase-config\";\r\nimport firebase from \"firebase\";\r\nimport Text from \"./components/AddText\";\r\nimport ShowText from \"./components/ShowText\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"fixed\" style={{backgroundColor:\"#2A265F\"}}>\r\n        <Toolbar></Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Text />\r\n        <ShowText />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}